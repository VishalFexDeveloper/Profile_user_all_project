package com.example.profileuserimport android.annotation.SuppressLintimport android.app.Activityimport android.app.ProgressDialogimport android.content.Contextimport android.content.Intentimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.ImageViewimport android.widget.LinearLayoutimport android.widget.MediaControllerimport android.widget.ProgressBarimport android.widget.TextViewimport android.widget.Toastimport android.widget.VideoViewimport androidx.appcompat.app.AlertDialogimport androidx.core.view.marginBottomimport androidx.core.view.marginEndimport androidx.core.view.marginTopimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.bumptech.glide.request.RequestOptionsimport com.google.android.material.bottomsheet.BottomSheetDialogimport com.google.android.material.imageview.ShapeableImageViewimport com.google.firebase.firestore.FirebaseFirestoreimport com.google.firebase.storage.FirebaseStorageimport org.w3c.dom.Textclass ProfileAdapter(var profile:ArrayList<ProfileModal>, val context: Context):RecyclerView.Adapter<ProfileAdapter.viewHolder>()  {    inner class viewHolder(item:View):RecyclerView.ViewHolder(item){        val fristN = item.findViewById<TextView>(R.id.homeName)        val country = item.findViewById<TextView>(R.id.homeCountryName)        val bio = item.findViewById<TextView>(R.id.homeBio)        val menu = item.findViewById<ImageView>(R.id.deleteMenu)        val profileImg = item.findViewById<ShapeableImageView>(R.id.homeImg)        val videoView = item.findViewById<VideoView>(R.id.videoView)    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ProfileAdapter.viewHolder {        return viewHolder(LayoutInflater.from(parent.context).inflate(R.layout.home_layout,parent,false))    }    @SuppressLint("SetTextI18n")    override fun onBindViewHolder(holder: ProfileAdapter.viewHolder, position: Int) {        holder.bio.text = profile[position].bio        holder.fristN.text = profile[position].first + " "+profile[position].lastName        holder.country.text = profile[position].countryName        val storage = FirebaseStorage.getInstance().reference        storage.child(profile[position].childName!!)            .downloadUrl            .addOnSuccessListener {                Glide.with(context)                    .load(it)                    .apply(RequestOptions().placeholder(R.drawable.profile_icon)) // Optional placeholder image                    .into(holder.profileImg)            }            .addOnFailureListener {                Toast.makeText(context, "downloadImg Failure image", Toast.LENGTH_LONG).show()                return@addOnFailureListener            }        holder.menu.setOnClickListener {            showBottomSheetAlertDialog(context,profile[position].first!!,profile[position].id!!,profile[position].childName!!,profile[position].childNameVideo!!,position)        }        storage.child(profile[position].childNameVideo!!)            .downloadUrl            .addOnSuccessListener {                holder.videoView.setVideoURI(it)                holder.videoView.start()                val mediaController = MediaController(context)                mediaController.setAnchorView(holder.videoView)                holder.videoView.setMediaController(mediaController)            }            .addOnFailureListener {                Toast.makeText(context, "downloadImg Failure video", Toast.LENGTH_LONG).show()                return@addOnFailureListener            }    }    private fun dialogBox(id:String,chaildName:String,position: Int,chaildNameVideo:String){        val alertDialog = AlertDialog.Builder(context)        alertDialog.setTitle("${profile[position].first}")        alertDialog.setMessage("you are delete agree")        alertDialog.setNegativeButton("Cancel") { dialog, _ ->            dialog.dismiss()        }        alertDialog.setPositiveButton("Delete") { dialog, _ ->            showProgressDialog(true,context)            val storage = FirebaseStorage.getInstance().reference             FirebaseFirestore.getInstance()                .collection("profileData")                .document(id)                .delete()                .addOnSuccessListener {                    Toast.makeText(context, "Delete Success ${profile[position].first}", Toast.LENGTH_SHORT).show()                    storage.child(chaildName)                        .delete()                        .addOnSuccessListener {                            val list = arrayListOf<ProfileModal>()                            FirebaseFirestore.getInstance()                                .collection("profileData")                                .get()                                .addOnSuccessListener {                                    for (a in it){                                        val data = a.toObject(ProfileModal::class.java)                                        list.add(data)                                    }                                    pageRef(list)                                    showProgressDialog(false,context)                                    return@addOnSuccessListener                                }                        }                        .addOnFailureListener {                            Toast.makeText(context, "Delete Failure", Toast.LENGTH_SHORT).show()                            dialog.dismiss()                            return@addOnFailureListener                        }                    storage.child(chaildNameVideo)                        .delete()                        .addOnSuccessListener {                            Toast.makeText(context, "video delete Success", Toast.LENGTH_SHORT).show()                            return@addOnSuccessListener                        }                        .addOnFailureListener {                            Toast.makeText(context, "video delete Failure", Toast.LENGTH_SHORT).show()                            return@addOnFailureListener                        }                    dialog.dismiss()                    return@addOnSuccessListener                }                 .addOnFailureListener {                     Toast.makeText(context, "Delete Failure ${profile[position].first}", Toast.LENGTH_SHORT).show()                     dialog.dismiss()                     return@addOnFailureListener                 }        }        alertDialog.create()        alertDialog.show()    }    private var progressDialog: ProgressDialog? = null    private fun showProgressDialog(show: Boolean, context: Context) {        if (show) {            if (progressDialog == null || !progressDialog!!.isShowing) {                progressDialog = ProgressDialog(context)                progressDialog!!.setMessage("Loading...")                progressDialog!!.setCancelable(false)                progressDialog!!.show()            }        } else {            progressDialog?.dismiss()            progressDialog = null        }    }    override fun getItemCount(): Int = profile.size    @SuppressLint("NotifyDataSetChanged")    private fun pageRef(list:List<ProfileModal>){        profile = list as ArrayList<ProfileModal>        notifyDataSetChanged()    }    @SuppressLint("MissingInflatedId")    fun showBottomSheetAlertDialog(context: Context, updateName: String,id:String,chaildName:String,chaildNameVideo:String,position: Int) {        val bottomSheetDialog = BottomSheetDialog(context)        val view = LayoutInflater.from(context).inflate(R.layout.buttom_sheet_layout, null,false)        view.findViewById<TextView>(R.id.profileName).text = updateName        view.findViewById<TextView>(R.id.profileDelete).text = updateName        view.findViewById<LinearLayout>(R.id.sheet_deleteBtn).setOnClickListener {            dialogBox(id,chaildName,position, chaildNameVideo)            bottomSheetDialog.dismiss()        }        view.findViewById<LinearLayout>(R.id.upDateBtn).setOnClickListener {            val intent = Intent(context,UpDateActivity::class.java).apply {                putExtra("id",profile[position].id)                putExtra("childName",profile[position].childName)                putExtra("childNameVideo",profile[position].childNameVideo)            }            context.startActivity(intent)            if (context is Activity) {                context.finish()            }            bottomSheetDialog.dismiss()        }        bottomSheetDialog.setContentView(view)        bottomSheetDialog.show()    }}