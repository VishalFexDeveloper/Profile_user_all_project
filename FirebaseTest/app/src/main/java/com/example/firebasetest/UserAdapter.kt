package com.example.firebasetestimport android.app.Dialogimport android.app.ProgressDialogimport android.content.Contextimport android.content.Intentimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.ImageViewimport android.widget.LinearLayoutimport android.widget.TextViewimport android.widget.Toastimport androidx.appcompat.app.AlertDialogimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.google.firebase.firestore.FirebaseFirestoreimport com.google.firebase.storage.FirebaseStorageclass UserAdapter(val userList:ArrayList<UserModal>,val context: Context):RecyclerView.Adapter<UserAdapter.viewHolder>() {    class viewHolder(itemView:View):RecyclerView.ViewHolder(itemView){        val name = itemView.findViewById<TextView>(R.id.name_layout)        val bio = itemView.findViewById<TextView>(R.id.bio_layout)        val country = itemView.findViewById<TextView>(R.id.country_layout)        val email = itemView.findViewById<TextView>(R.id.email_layout)        val image = itemView.findViewById<ImageView>(R.id.image_layout)        val layout = itemView.findViewById<LinearLayout>(R.id.layout)    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): viewHolder {       return viewHolder(LayoutInflater.from(context).inflate(R.layout.user_layout,parent,false))    }    override fun onBindViewHolder(holder: viewHolder, position: Int) {        val positionMy = userList[position]       holder.name.text = positionMy.name        holder.email.text =positionMy.email        holder.country.text = positionMy.country        holder.bio.text = positionMy.bio        FirebaseStorage.getInstance().getReference("users")            .child(positionMy.childName!!).downloadUrl            .addOnSuccessListener {                Glide.with(context)                    .load(it)                    .placeholder(R.drawable.ic_launcher_background)                    .into(holder.image)            }       holder.layout.setOnLongClickListener {           DialogBox(position)           true       }        holder.layout.setOnClickListener {            val intent = Intent(context,UpDateActivity::class.java).apply {                putExtra("userid",positionMy.userid)                putExtra("childName",positionMy.childName)                putExtra("name",positionMy.name)                putExtra("country",positionMy.country)                putExtra("bio",positionMy.bio)                putExtra("email",positionMy.email)            }            context.startActivity(intent)        }    }    override fun getItemCount(): Int = userList.size    private fun DialogBox(position: Int){        val alertDialog = AlertDialog.Builder(context)        alertDialog.setTitle(userList[position].name)        alertDialog.setMessage("${userList[position].name} is delete")        alertDialog.setNegativeButton("NO"){dialog,_ ->            dialog.dismiss()        }        alertDialog.setPositiveButton("YES"){dialog,_ ->            dialog.cancel()            FirebaseFirestore.getInstance().collection("users").document(userList[position].userid!!).delete()                .addOnSuccessListener {                    Toast.makeText(context, "deta Delete", Toast.LENGTH_SHORT).show()                    FirebaseStorage.getInstance().getReference("users").child(userList[position].childName!!).delete()                        .addOnSuccessListener {                            Toast.makeText(context, "image delete", Toast.LENGTH_SHORT).show()                            return@addOnSuccessListener                        }                        .addOnFailureListener {                            Toast.makeText(context, "image Failure", Toast.LENGTH_SHORT).show()                            return@addOnFailureListener                        }                    return@addOnSuccessListener                }                .addOnFailureListener {                    Toast.makeText(context, "deta Delete Failure", Toast.LENGTH_SHORT).show()                    return@addOnFailureListener        }        }        alertDialog.create()        alertDialog.show()    }    var progressDialog:ProgressDialog? = null    private fun progressDialog(Check:Boolean){        if (Check){           progressDialog = ProgressDialog(context)            progressDialog!!.setMessage("LOADING...")            progressDialog!!.setCancelable(false)            progressDialog!!.show()        }else{            progressDialog!!.dismiss()        }    }}