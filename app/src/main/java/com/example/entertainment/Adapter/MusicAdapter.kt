package com.example.entertainment.Adapterimport android.annotation.SuppressLintimport android.content.Contextimport android.content.Intentimport android.text.format.DateUtilsimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.RelativeLayoutimport android.widget.TextViewimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.bumptech.glide.request.RequestOptionsimport com.example.entertainment.ModalData.BottomSheetModalimport com.example.entertainment.ModalData.Musicimport com.example.entertainment.Rimport com.example.entertainment.PlayerActivityimport com.google.android.material.bottomsheet.BottomSheetDialogimport com.google.android.material.imageview.ShapeableImageViewclass MusicAdapter(val context: Context, private var musicList: MutableList<Music>, var isFolder: Int = 0) :    RecyclerView.Adapter<MusicAdapter.LayoutTwoViewHolder>() {    private val imageList = arrayOf(        R.drawable.img1, R.drawable.img2,        R.drawable.img3, R.drawable.live_logo,        R.drawable.img5, R.drawable.music_logo    )    private val bottomList = arrayOf(        BottomSheetModal(R.drawable.append_text_30,"Play next"),        BottomSheetModal(R.drawable.add_list_30,"Add to playlist"),        BottomSheetModal(R.drawable.share_img,"Share"),        BottomSheetModal(R.drawable.edit_text,"Edit Tags"),        BottomSheetModal(R.drawable.icons8_notification_icon,"Make as a Ringtone"),        BottomSheetModal(R.drawable.icons8_hide_icon,"hide"),        BottomSheetModal(R.drawable.delete_icon_fal,"Delete from device")    )    inner class LayoutTwoViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {        val icon: ShapeableImageView = itemView.findViewById(R.id.Music_image)        val textOne: TextView = itemView.findViewById(R.id.text_one)        val textTwo: TextView = itemView.findViewById(R.id.text_two)        val menuBtn : ShapeableImageView = itemView.findViewById(R.id.menuMusicSong)        val parent_Layout: RelativeLayout = itemView.findViewById(R.id.Music_layout)    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): LayoutTwoViewHolder {        val layout =            LayoutInflater.from(parent.context).inflate(R.layout.music_layoutview, parent, false)        return LayoutTwoViewHolder(layout)    }    @SuppressLint("InflateParams", "MissingInflatedId", "ResourceAsColor", "SetTextI18n")    override fun onBindViewHolder(holder: LayoutTwoViewHolder, position: Int) {        val duration = DateUtils.formatElapsedTime(musicList[position].duration / 1000)        holder.textOne.text = musicList[position].title        holder.textTwo.text = musicList[position].album + " ||  $duration  ||"        holder.menuBtn.setOnClickListener {            bottomSheet(position)        }        Glide.with(context)            .load(musicList[position].artUri)            .apply(                RequestOptions()                    .placeholder(imageList.random())  // Use random placeholder from the array                    .centerCrop()            )            .into(holder.icon)        holder.parent_Layout.setOnClickListener {            if (isFolder == 0) {                sendIntent(position, "allSong")            } else if (isFolder == 1) {                sendIntent(position, "allSongFolder")            } else if (isFolder == 2) {                sendIntent(position, "allSongAlbum")            }        }    }    override fun getItemCount(): Int {        return musicList.size    }    @SuppressLint("NotifyDataSetChanged")    fun refreshDataMusic(newNotes: List<Music>) {        musicList = newNotes.toMutableList()        notifyDataSetChanged()    }    private fun sendIntent(pos: Int, ref: String) {        PlayerActivity.songPosition = pos        val intent = Intent(context, PlayerActivity::class.java)        intent.putExtra("class", ref)        ContextCompat.startActivity(context, intent, null)    }    @SuppressLint("InflateParams", "MissingInflatedId")    private fun bottomSheet(pos:Int){        val layoutView = LayoutInflater.from(context).inflate(R.layout.parent_botttomsheet_music,null,false)        val bottomSheetDialog = BottomSheetDialog(context)        bottomSheetDialog.setContentView(layoutView)        val icon = layoutView.findViewById<ShapeableImageView>(R.id.parent_icon)        val title = layoutView.findViewById<TextView>(R.id.parent_title)        val dep = layoutView.findViewById<TextView>(R.id.parent_dep)        val recyclerView :RecyclerView = layoutView.findViewById(R.id.parentMenu_recycle)        title?.text = musicList[pos].title        dep?.text = musicList[pos].album        recyclerView.layoutManager = LinearLayoutManager(context)        recyclerView.adapter = ParentMenu(context,bottomList)        if (icon != null) {            Glide.with(context)                .load(musicList[pos].artUri)                .apply(                    RequestOptions()                        .placeholder(imageList.random())                        .centerCrop()                )                .into(icon)        }        bottomSheetDialog.show()    }}