package com.example.entertainment.Adapterimport android.content.BroadcastReceiverimport android.content.Contextimport android.content.Intentimport android.widget.Toastimport com.bumptech.glide.Glideimport com.example.entertainment.ModalData.setSongPositionimport com.example.entertainment.PlayerActivityimport com.example.entertainment.Rimport kotlin.system.exitProcessclass NotificationReceiver:BroadcastReceiver() {    override fun onReceive(context: Context?, intent: Intent?) {        when(intent?.action){            ApplicationClass.PREVIOUS ->{                Toast.makeText(context, "previous clicked", Toast.LENGTH_SHORT).show()            }            ApplicationClass.PLAY ->{                if (PlayerActivity.isplaying){                    pauseMusic()                }else{                    playMusic()                }            }            ApplicationClass.NEXT ->{                Toast.makeText(context, "next clicked", Toast.LENGTH_SHORT).show()            }            ApplicationClass.EXIT ->{                PlayerActivity.musicService!!.stopForeground(true)                PlayerActivity.musicService = null                exitProcess(1)            }        }    }    private fun playMusic(){        PlayerActivity.isplaying = true        PlayerActivity.musicService!!.mediaPlayer!!.start()        PlayerActivity.musicService!!.showNotification(R.drawable.pause_ic_icon32)        PlayerActivity.playPauseBtn.setIconResource(R.drawable.pause_icon24)    }    private fun pauseMusic(){        PlayerActivity.isplaying = false        PlayerActivity.musicService!!.mediaPlayer!!.pause()        PlayerActivity.musicService!!.showNotification(R.drawable.play_icon32)        PlayerActivity.playPauseBtn.setIconResource(R.drawable.play_icon32)    }    private fun prevNextSong(incrent:Boolean,context: Context){        setSongPosition(increment = incrent)        PlayerActivity.musicService!!.mediaPlayer!!.setDataSource(PlayerActivity.musicListPlayer[PlayerActivity.songPosition].path)        PlayerActivity.musicService!!.mediaPlayer!!.prepare()        PlayerActivity.playPauseBtn.setIconResource(R.drawable.pause_ic_icon32)        val imageList = arrayOf(            R.drawable.live_music,            R.drawable.img1, R.drawable.img2,            R.drawable.img3, R.drawable.img5,            R.drawable.music_logo        )        PlayerActivity.songtitle.text = PlayerActivity.musicListPlayer[PlayerActivity.songPosition].title        Glide.with(context)            .load(PlayerActivity.musicListPlayer[PlayerActivity.songPosition].artUri)            .placeholder(imageList.random())            .into(PlayerActivity.player_Image_small)    }}